$sublimeRoot = "C:\st"

Import-Module "$PSScriptRoot\SyntaxHelper.psm1"

Describe "Syntax highlighting" {
    
    Context "test-file.ps1" {
        
        $tokensFolder = Join-Path $sublimeRoot "Data\Packages\User\UnitTesting\tokens" 
        $scopesFile = Join-Path $tokensFolder "test-file.ps1.tokens" 

        $testFile = Resolve-Path "$PSScriptRoot\..\samples\test-file.ps1"

        if (-not (Test-Path $scopesFile)) {
            Write-Warning 'This Pester UT suite consumes scopes generated by python unit test Test_TokenGenerator. You need to run python tests first.'
            return
        }

        # splitted in two lines, because of a bug in Sort-Object
        $stScopes = cat -Raw $scopesFile | ConvertFrom-Json; $stScopes = $stScopes | sort -Property @('startOffset', 'endOffset')
        # tokens are already sorted
        $psScopes = Get-TokensFromFile $testFile | Convert-TokenToScope 

        It "split tokens across the scopes 0 times" {
            $stIndex = 0
            $errorCounter = 0

            $psScopes | %{
                while ($stScopes[$stIndex].endOffset -le $_.startOffset) {
                    $stIndex++
                    if ($stIndex -ge $stScopes.Length) {
                        break
                    }
                }

                $stScope = $stScopes[$stIndex]
                $psScope = $_

                #Write-Host "PowerShell scope $psScope"
                #Write-Host "SublimeText scope $stScope"
                
                if (-not (Test-ScopeInclosure $psScope $stScope)) {
                    #Write-Host "PowerShell scope $psScope not found in SublimeText scopes"
                    if (-not (Test-ScopeDisclosure $psScope $stScope)) {
                        $ignore = $false
                        
                        # These are minor things
                        if (@('$', '${', '-', '<#', '($') -contains $stScope.Text) {
                            $ignore = $true
                        }

                        # TODO: These are bugs
                        if (@('Number', 'Redirection') -contains $psScope.Kind) {
                            $ignore = $true    
                        }

                        if (-not $ignore) {
                            Write-Warning "PowerShell scope $psScope overlap with SublimeText scope $stScope"
                            $errorCounter++
                        }
                    }
                }
            }
            # TODO: These are bugs, make it 0
            $errorCounter | Should be @(0..4)
        }

        It "produces same tokens for lower case" {
            $stLowScopes = Get-SublimeScopesFromFile (Join-Path $tokensFolder "test-file.ps1.lower.tokens" )
            $diff = Compare-Object $stScopes $stLowScopes
            if ($diff) {
                $diff | Write-DiffAsWarning
            }
            $diff | Should Be $null
        }

        It "produces same tokens for upper case" {
            $stUpperScopes = Get-SublimeScopesFromFile (Join-Path $tokensFolder "test-file.ps1.upper.tokens" )
            $diff = Compare-Object $stScopes $stUpperScopes
            if ($diff) {
                $diff | Write-DiffAsWarning
            }
            $diff | Should Be $null
        }
    }
}